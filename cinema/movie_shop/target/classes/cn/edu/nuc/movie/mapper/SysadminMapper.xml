<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nuc.movie.dao.SysadminMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nuc.movie.entity.Sysadmin">
    <id column="adminid" jdbcType="INTEGER" property="adminid" />
    <result column="roleid" jdbcType="INTEGER" property="roleid" />
    <result column="adminname" jdbcType="VARCHAR" property="adminname" />
    <result column="adminpwd" jdbcType="VARCHAR" property="adminpwd" />
    <result column="admintruename" jdbcType="VARCHAR" property="admintruename" />
    <result column="adminstate" jdbcType="INTEGER" property="adminstate" />
  </resultMap>
  <sql id="Base_Column_List">
    adminid, roleid, adminname, adminpwd, admintruename, adminstate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sysadmin
    where adminid = #{adminid,jdbcType=INTEGER}
  </select>
  
  <select id="findByAdmin" resultType="cn.edu.nuc.movie.entity.Sysadmin">
  	select
  	<include refid="Base_Column_List" />
  	from sysadmin
  	where adminname = #{adminname} and adminpwd=#{adminpwd}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sysadmin
    where adminid = #{adminid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.nuc.movie.entity.Sysadmin">
    insert into sysadmin (adminid, roleid, adminname, 
      adminpwd, admintruename, adminstate
      )
    values (#{adminid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{adminname,jdbcType=VARCHAR}, 
      #{adminpwd,jdbcType=VARCHAR}, #{admintruename,jdbcType=VARCHAR}, #{adminstate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nuc.movie.entity.Sysadmin">
    insert into sysadmin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminid != null">
        adminid,
      </if>
      <if test="roleid != null">
        roleid,
      </if>
      <if test="adminname != null">
        adminname,
      </if>
      <if test="adminpwd != null">
        adminpwd,
      </if>
      <if test="admintruename != null">
        admintruename,
      </if>
      <if test="adminstate != null">
        adminstate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminid != null">
        #{adminid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="adminname != null">
        #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="adminpwd != null">
        #{adminpwd,jdbcType=VARCHAR},
      </if>
      <if test="admintruename != null">
        #{admintruename,jdbcType=VARCHAR},
      </if>
      <if test="adminstate != null">
        #{adminstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nuc.movie.entity.Sysadmin">
    update sysadmin
    <set>
      <if test="roleid != null">
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="adminname != null">
        adminname = #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="adminpwd != null">
        adminpwd = #{adminpwd,jdbcType=VARCHAR},
      </if>
      <if test="admintruename != null">
        admintruename = #{admintruename,jdbcType=VARCHAR},
      </if>
      <if test="adminstate != null">
        adminstate = #{adminstate,jdbcType=INTEGER},
      </if>
    </set>
    where adminid = #{adminid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nuc.movie.entity.Sysadmin">
    update sysadmin
    set roleid = #{roleid,jdbcType=INTEGER},
      adminname = #{adminname,jdbcType=VARCHAR},
      adminpwd = #{adminpwd,jdbcType=VARCHAR},
      admintruename = #{admintruename,jdbcType=VARCHAR},
      adminstate = #{adminstate,jdbcType=INTEGER}
    where adminid = #{adminid,jdbcType=INTEGER}
  </update>
</mapper>