<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nuc.movie.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nuc.movie.entity.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="uname" jdbcType="VARCHAR" property="uname" />
    <result column="uemail" jdbcType="VARCHAR" property="uemail" />
    <result column="uphone" jdbcType="VARCHAR" property="uphone" />
    <result column="uaddr" jdbcType="VARCHAR" property="uaddr" />
    <result column="ustate" jdbcType="INTEGER" property="ustate" />
    <result column="code" jdbcType="VARCHAR" property="code" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, username, password, uname, uemail, uphone, uaddr, ustate, code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
    <select id="findCount" resultType="int">
      select count(*) from user
  </select>
  
  <select id="findByPage" parameterType="int" resultType="cn.edu.nuc.movie.entity.User">
      SELECT
		<include refid="Base_Column_List" />
	  FROM
		user
	  LIMIT #{begin},#{limit}
  </select>
  <select id="findByUser" resultType="cn.edu.nuc.movie.entity.User">
  	select
  	<include refid="Base_Column_List" />
  	from user
  	where username = #{username} and password=#{password}
  </select>
  <select id="findByUname" resultType="cn.edu.nuc.movie.entity.User">
  	select
  	<include refid="Base_Column_List" />
  	from user
  	where username = #{username}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.nuc.movie.entity.User">
    insert into user (uid, username, password, 
      uname, uemail, uphone, 
      uaddr, ustate, code
      )
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{uname,jdbcType=VARCHAR}, #{uemail,jdbcType=VARCHAR}, #{uphone,jdbcType=VARCHAR}, 
      #{uaddr,jdbcType=VARCHAR}, #{ustate,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nuc.movie.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="uname != null">
        uname,
      </if>
      <if test="uemail != null">
        uemail,
      </if>
      <if test="uphone != null">
        uphone,
      </if>
      <if test="uaddr != null">
        uaddr,
      </if>
      <if test="ustate != null">
        ustate,
      </if>
      <if test="code != null">
        code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="uemail != null">
        #{uemail,jdbcType=VARCHAR},
      </if>
      <if test="uphone != null">
        #{uphone,jdbcType=VARCHAR},
      </if>
      <if test="uaddr != null">
        #{uaddr,jdbcType=VARCHAR},
      </if>
      <if test="ustate != null">
        #{ustate,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nuc.movie.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="uemail != null">
        uemail = #{uemail,jdbcType=VARCHAR},
      </if>
      <if test="uphone != null">
        uphone = #{uphone,jdbcType=VARCHAR},
      </if>
      <if test="uaddr != null">
        uaddr = #{uaddr,jdbcType=VARCHAR},
      </if>
      <if test="ustate != null">
        ustate = #{ustate,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nuc.movie.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      uname = #{uname,jdbcType=VARCHAR},
      uemail = #{uemail,jdbcType=VARCHAR},
      uphone = #{uphone,jdbcType=VARCHAR},
      uaddr = #{uaddr,jdbcType=VARCHAR},
      ustate = #{ustate,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>